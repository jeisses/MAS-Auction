extensions [table]

breed [buyers buyer]

; --- Buyer variables ---
;
; 1) beliefs
; 2) desire
; 3) intention
; 4) private-value: the agen't private value for a good (currently there is only 1 good)
; 5) outgoing-messages
; 6) incomming-messages
buyers-own [beliefs desire intention money private-value outgoing-messages incoming-messages]

; --- Setup buyers ---
to setup-buyers
  let num-buyers 5
  create-buyers num-buyers [
    setxy 4 + min-pxcor + who * 3 min-pycor + 3
    set heading 90
    set color red
    set shape "person"
    
    ; Initial money is random
    set money (random 100)
    set label money
    
    ; Draw the buyer's private-values from a normal distribution 
    set private-value (round (random-normal 20 5))
    
    set beliefs table:make
    
    ; Store the initial belifs
    table:put beliefs "money" money
    table:put beliefs "value" private-value
    
    set desire "minimize-price"
    set intention false
    set incoming-messages (list)
  ]
end

to update-buyer-beliefs
  ; Look how much money we have left
  table:put beliefs "money" money
  
  foreach incoming-messages [
    ; Message about what good is being sold. Format is: 
    ; ["auctioned-good", good-turtle-id, current-bid]
    ifelse first ? = "auctioned-good" [
      table:put beliefs "auctioned-good" item 2 ?
      table:put beliefs "current-bid" item 3 ?
    ][
    ;; Auction for the current good is closed 
    ifelse first ? = "close-auction" [
      table:remove beliefs "auctioned-good"
      table:remove beliefs "current-bid"
    ][]]
  ]
end


to update-buyer-desires
  
end

to update-buyer-intentions
  ;; See if we want to bid
  if table:has-key? beliefs "auctioned-good" [
    ;bid = (basic-bid-strategie table:get beliefs "auctioned-good")
  ]
end

to execute-buyer-actions
  
end

;;;;;;;;;;;;;;;;;;;;;
;; BUYER STRATEGIES
;;;;;;;;;;;;;;;;;;;;;

to basic-bid-strategie
   ;; ask goods  [
   ;;     
   ;; ]
end